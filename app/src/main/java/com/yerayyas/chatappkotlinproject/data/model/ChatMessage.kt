package com.yerayyas.chatappkotlinproject.data.model

/**
 * Represents a single message within a chat conversation.
 * This data class is used for serialization and deserialization with Firebase Realtime Database.
 *
 * @property id A unique identifier for the message, typically the key generated by Firebase.
 * @property senderId The unique ID of the user who sent the message.
 * @property receiverId The unique ID of the user who is intended to receive the message.
 * @property message The main text content of the message. For image messages, this may serve as a caption or fallback text.
 * @property timestamp The server-side timestamp indicating when the message was created, in milliseconds.
 * @property imageUrl The URL of the image, only present if `messageType` is [MessageType.IMAGE].
 * @property messageType The type of the message, either [MessageType.TEXT] or [MessageType.IMAGE].
 * @property readStatus The delivery and read status of the message, see [ReadStatus].
 */
data class ChatMessage(
    val id: String = "",
    val senderId: String = "",
    val receiverId: String = "",
    val message: String = "",
    val timestamp: Long = System.currentTimeMillis(),
    val imageUrl: String? = null,
    val messageType: MessageType = MessageType.TEXT,
    val readStatus: ReadStatus = ReadStatus.SENT
) {
    // A no-argument constructor is required by Firebase for deserialization.
    constructor() : this("", "", "", "", 0L, null, MessageType.TEXT, ReadStatus.SENT)

    /**
     * A convenience method to check if this message was sent by a specific user.
     *
     * @param userId The ID of the user to check against the sender of this message.
     * @return `true` if the `senderId` matches the provided `userId`, `false` otherwise.
     */
    fun isSentBy(userId: String): Boolean = senderId == userId

    /**
     * A convenience method to check if this message was intended for a specific user.
     *
     * @param userId The ID of the user to check against the receiver of this message.
     * @return `true` if the `receiverId` matches the provided `userId`, `false` otherwise.
     */
    fun isReceivedBy(userId: String): Boolean = receiverId == userId
}

/**
 * Defines the type of content a [ChatMessage] holds.
 */
enum class MessageType {
    /** The message contains only plain text. */
    TEXT,

    /** The message contains an image, referenced by [ChatMessage.imageUrl]. */
    IMAGE
}

/**
 * Defines the delivery and read status of a [ChatMessage].
 */
enum class ReadStatus {
    /** The message has been sent from the client but its delivery status is unknown. */
    SENT,

    /** The message has been delivered to the recipient's device (not implemented in this example). */
    DELIVERED,

    /** The message has been read by the recipient. */
    READ
}
